// <auto-generated />
using System;
using EHealth.ManageItemLists.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EHealth.ManageItemLists.DataAccess.Migrations
{
    [DbContext(typeof(EHealthDbContext))]
    [Migration("20231016120606_add-facility-UHIA")]
    partial class addfacilityUHIA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("CategoryAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CategoryEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<string>("DefinitionEn")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListSubtypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ItemListSubtypeId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Consumables_Devices.ConsumablesAndDevices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EHealthCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescriptorAr")
                        .HasColumnType("text");

                    b.Property<string>("ShortDescriptorEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("UHIAId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemListId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("ConsumablesAndDevices", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DevicesAndAssets.UHIA.DevicesAndAssetsUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescriptorAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DescriptorEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<int?>("UnitRoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UnitRoomId");

                    b.ToTable("DevicesAndAssetsUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Facility.UHIA.FacilityUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescriptorAr")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DescriptorEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("OccupancyRate")
                        .HasPrecision(11, 7)
                        .HasColumnType("double precision");

                    b.Property<double>("OperatingDaysPerMonth")
                        .HasPrecision(11, 7)
                        .HasColumnType("double precision");

                    b.Property<double>("OperatingRateInHoursPerDay")
                        .HasPrecision(11, 7)
                        .HasColumnType("double precision");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("FacilityUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListPricing.ItemListPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("ConsumablesAndDevicesId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DevicesAndAssetsUHIAId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EffectiveDateFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EffectiveDateTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("ProcedureICHIId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ServiceUHIAId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConsumablesAndDevicesId");

                    b.HasIndex("DevicesAndAssetsUHIAId");

                    b.HasIndex("ProcedureICHIId");

                    b.HasIndex("ServiceUHIAId");

                    b.ToTable("ItemListPrices", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ItemListTypeId");

                    b.ToTable("ItemListSubtypes", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListTypes.ItemListType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("ItemListTypes", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemLists.ItemList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListSubtypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ItemListSubtypeId");

                    b.ToTable("ItemLists", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.LocalSpecialtyDepartments.LocalSpecialtyDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionENG")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("LocalSpecialityAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocalSpecialityENG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("LocalSpecialtyDepartments", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.LocalTypeOfMeasure.UnitOfMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionENG")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("MeasureTypeAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MeasureTypeENG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasures", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Procedures.ProceduresICHI.ProcedureICHI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EHealthCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<int>("LocalSpecialtyDepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TitleAr")
                        .HasColumnType("text");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UHIAId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemListId");

                    b.HasIndex("LocalSpecialtyDepartmentId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("ProceduresICHI", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Services.ServicesUHIA.ServiceUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EHealthCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceSubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescAr")
                        .HasColumnType("text");

                    b.Property<string>("ShortDescEn")
                        .HasColumnType("text");

                    b.Property<string>("UHIAId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemListId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("ServiceSubCategoryId");

                    b.ToTable("ServicesUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<string>("DefinitionEn")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListSubtypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubCategoryAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SubCategoryEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemListSubtypeId");

                    b.ToTable("SubCategories", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.UnitRooms.UnitRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionEN")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnitRooms");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Categories.Category", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", "ItemListSubtype")
                        .WithMany()
                        .HasForeignKey("ItemListSubtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemListSubtype");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Consumables_Devices.ConsumablesAndDevices", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany()
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.LocalTypeOfMeasure.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemList");

                    b.Navigation("ServiceCategory");

                    b.Navigation("SubCategory");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DevicesAndAssets.UHIA.DevicesAndAssetsUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.UnitRooms.UnitRoom", "UnitRoom")
                        .WithMany()
                        .HasForeignKey("UnitRoomId");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");

                    b.Navigation("UnitRoom");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Facility.UHIA.FacilityUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListPricing.ItemListPrice", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Consumables_Devices.ConsumablesAndDevices", null)
                        .WithMany("ItemListPrices")
                        .HasForeignKey("ConsumablesAndDevicesId");

                    b.HasOne("EHealth.ManageItemLists.Domain.DevicesAndAssets.UHIA.DevicesAndAssetsUHIA", null)
                        .WithMany("ItemListPrices")
                        .HasForeignKey("DevicesAndAssetsUHIAId");

                    b.HasOne("EHealth.ManageItemLists.Domain.Procedures.ProceduresICHI.ProcedureICHI", null)
                        .WithMany("ItemListPrices")
                        .HasForeignKey("ProcedureICHIId");

                    b.HasOne("EHealth.ManageItemLists.Domain.Services.ServicesUHIA.ServiceUHIA", null)
                        .WithMany("ItemListPrices")
                        .HasForeignKey("ServiceUHIAId");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemListTypes.ItemListType", "ItemListType")
                        .WithMany("ItemListSubtypes")
                        .HasForeignKey("ItemListTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemListType");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemLists.ItemList", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", "ItemListSubtype")
                        .WithMany("ItemLists")
                        .HasForeignKey("ItemListSubtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemListSubtype");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Procedures.ProceduresICHI.ProcedureICHI", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany()
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.LocalSpecialtyDepartments.LocalSpecialtyDepartment", "LocalSpecialtyDepartment")
                        .WithMany()
                        .HasForeignKey("LocalSpecialtyDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemList");

                    b.Navigation("LocalSpecialtyDepartment");

                    b.Navigation("ServiceCategory");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Services.ServicesUHIA.ServiceUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany()
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "ServiceSubCategory")
                        .WithMany()
                        .HasForeignKey("ServiceSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemList");

                    b.Navigation("ServiceCategory");

                    b.Navigation("ServiceSubCategory");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", "ItemListSubtype")
                        .WithMany()
                        .HasForeignKey("ItemListSubtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ItemListSubtype");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Categories.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Consumables_Devices.ConsumablesAndDevices", b =>
                {
                    b.Navigation("ItemListPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DevicesAndAssets.UHIA.DevicesAndAssetsUHIA", b =>
                {
                    b.Navigation("ItemListPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", b =>
                {
                    b.Navigation("ItemLists");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListTypes.ItemListType", b =>
                {
                    b.Navigation("ItemListSubtypes");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Procedures.ProceduresICHI.ProcedureICHI", b =>
                {
                    b.Navigation("ItemListPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Services.ServicesUHIA.ServiceUHIA", b =>
                {
                    b.Navigation("ItemListPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
