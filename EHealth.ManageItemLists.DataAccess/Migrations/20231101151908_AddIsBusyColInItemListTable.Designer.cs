// <auto-generated />
using System;
using EHealth.ManageItemLists.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EHealth.ManageItemLists.DataAccess.Migrations
{
    [DbContext(typeof(EHealthDbContext))]
    [Migration("20231101151908_AddIsBusyColInItemListTable")]
    partial class AddIsBusyColInItemListTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("CategoryAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CategoryEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<string>("DefinitionEn")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListSubtypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemListSubtypeId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ConsumablesAndDevices.ConsumablesAndDevicesUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EHealthCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescriptorAr")
                        .HasColumnType("text");

                    b.Property<string>("ShortDescriptorEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UHIAId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemListId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("ConsumablesAndDevicesUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DevicesAndAssets.UHIA.DevicesAndAssetsUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DescriptorAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DescriptorEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UnitRoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemListId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UnitRoomId");

                    b.ToTable("DevicesAndAssetsUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DoctorFees.ItemPrice.DoctorFeesItemPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("DoctorFees")
                        .HasPrecision(11, 7)
                        .HasColumnType("double precision");

                    b.Property<Guid?>("DoctorFeesUHIAId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitOfDoctorFeesId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DoctorFeesUHIAId");

                    b.HasIndex("UnitOfDoctorFeesId");

                    b.ToTable("DoctorFeesItemPrices", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DoctorFees.UHIA.DoctorFeesUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DescriptorAr")
                        .HasColumnType("text");

                    b.Property<string>("DescriptorEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PackageComplexityClassificationId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemListId");

                    b.HasIndex("PackageComplexityClassificationId");

                    b.ToTable("DoctorFeesUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Drugs.DrugsUHIA.DrugUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DosageForm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DrugsPackageTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("EHealthDrugCode")
                        .HasColumnType("text");

                    b.Property<string>("InternationalNonProprietaryName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("LocalDrugCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MainUnitId")
                        .HasColumnType("integer");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("MarketAuthorizationHolder")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("NumberOfMainUnit")
                        .HasColumnType("integer");

                    b.Property<int?>("NumberOfSubunitPerMainUnit")
                        .HasColumnType("integer");

                    b.Property<string>("ProprietaryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RegistrationTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("ReimbursementCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("RouteOfAdministration")
                        .HasColumnType("text");

                    b.Property<int?>("SubUnitId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TotalNumberSubunitsOfPack")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DrugsPackageTypeId");

                    b.HasIndex("ItemListId");

                    b.HasIndex("MainUnitId");

                    b.HasIndex("RegistrationTypeId");

                    b.HasIndex("ReimbursementCategoryId");

                    b.HasIndex("SubUnitId");

                    b.ToTable("DrugsUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DrugsPackageTypes.DrugsPackageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionEN")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DrugsPackageTypes", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DrugsPricing.DrugPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DrugUHIAId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("FullPackPrice")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<double>("MainUnitPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("SubUnitPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DrugUHIAId");

                    b.ToTable("DrugsPrices", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Facility.UHIA.FacilityUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DescriptorAr")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DescriptorEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("OccupancyRate")
                        .HasPrecision(11, 7)
                        .HasColumnType("double precision");

                    b.Property<double>("OperatingDaysPerMonth")
                        .HasPrecision(11, 7)
                        .HasColumnType("double precision");

                    b.Property<double>("OperatingRateInHoursPerDay")
                        .HasPrecision(11, 7)
                        .HasColumnType("double precision");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemListId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("FacilityUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListPricing.ItemListPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("ConsumablesAndDevicesUHIAId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DevicesAndAssetsUHIAId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("ProcedureICHIId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ServiceUHIAId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ConsumablesAndDevicesUHIAId");

                    b.HasIndex("DevicesAndAssetsUHIAId");

                    b.HasIndex("ProcedureICHIId");

                    b.HasIndex("ServiceUHIAId");

                    b.ToTable("ItemListPrices", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemListTypeId");

                    b.ToTable("ItemListSubtypes", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListTypes.ItemListType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ItemListTypes", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemLists.ItemList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsBusy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListSubtypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemListSubtypeId");

                    b.ToTable("ItemLists", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.LocalSpecialtyDepartments.LocalSpecialtyDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionENG")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("LocalSpecialityAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocalSpecialityENG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LocalSpecialtyDepartments", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.LocalTypeOfMeasure.UnitOfMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionENG")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("MeasureTypeAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MeasureTypeENG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasures", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.PackageComplexityClassifications.PackageComplexityClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ComplexityAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ComplexityEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<string>("DefinitionEn")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PackageComplexityClassifications", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.PriceUnits.PriceUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<string>("DefinitionEN")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PriceUnits", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Procedures.ProceduresICHI.ProcedureICHI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EHealthCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<int?>("LocalSpecialtyDepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleAr")
                        .HasColumnType("text");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UHIAId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemListId");

                    b.HasIndex("LocalSpecialtyDepartmentId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("ProceduresICHI", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.RegistrationTypes.RegistrationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionENG")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegistrationTypeAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegistrationTypeENG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RegistrationTypes", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ReimbursementCategories.ReimbursementCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionENG")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameENG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReimbursementCategories", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Resource.ItemPrice.ResourceItemPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Price")
                        .HasPrecision(11, 7)
                        .HasColumnType("double precision");

                    b.Property<int>("PriceUnitId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ResourceUHIAId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PriceUnitId");

                    b.HasIndex("ResourceUHIAId");

                    b.ToTable("ResourceItemPrices", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Resource.UHIA.ResourceUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DescriptorAr")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DescriptorEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemListId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("ResourceUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Services.ServicesUHIA.ServiceUHIA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEffectiveDateFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEffectiveDateTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EHealthCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceSubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescAr")
                        .HasColumnType("text");

                    b.Property<string>("ShortDescEn")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UHIAId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemListId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("ServiceSubCategoryId");

                    b.ToTable("ServicesUHIA", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<string>("DefinitionEn")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<int>("ItemListSubtypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubCategoryAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SubCategoryEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemListSubtypeId");

                    b.ToTable("SubCategories", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.UnitOfTheDoctor_sfees.UnitDOF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<string>("DefinitionEN")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfDoctorFees", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.UnitRooms.UnitRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionEN")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnitRooms");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.UnitsTypes.UnitsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefinitionAr")
                        .HasColumnType("text");

                    b.Property<string>("DefinitionEn")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IsDeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnitsTypes", (string)null);
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Categories.Category", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", "ItemListSubtype")
                        .WithMany()
                        .HasForeignKey("ItemListSubtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemListSubtype");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ConsumablesAndDevices.ConsumablesAndDevicesUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany("ConsumablesAndDevicesUHIAlist")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.LocalTypeOfMeasure.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemList");

                    b.Navigation("ServiceCategory");

                    b.Navigation("SubCategory");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DevicesAndAssets.UHIA.DevicesAndAssetsUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany("DevicesAndAssetsUHIAlist")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.UnitRooms.UnitRoom", "UnitRoom")
                        .WithMany()
                        .HasForeignKey("UnitRoomId");

                    b.Navigation("Category");

                    b.Navigation("ItemList");

                    b.Navigation("SubCategory");

                    b.Navigation("UnitRoom");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DoctorFees.ItemPrice.DoctorFeesItemPrice", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.DoctorFees.UHIA.DoctorFeesUHIA", null)
                        .WithMany("ItemListPrices")
                        .HasForeignKey("DoctorFeesUHIAId");

                    b.HasOne("EHealth.ManageItemLists.Domain.UnitOfTheDoctor_sfees.UnitDOF", "UnitOfDoctorFees")
                        .WithMany()
                        .HasForeignKey("UnitOfDoctorFeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitOfDoctorFees");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DoctorFees.UHIA.DoctorFeesUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany("DoctorFeesUHIAlist")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.PackageComplexityClassifications.PackageComplexityClassification", "PackageComplexityClassification")
                        .WithMany()
                        .HasForeignKey("PackageComplexityClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemList");

                    b.Navigation("PackageComplexityClassification");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Drugs.DrugsUHIA.DrugUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.DrugsPackageTypes.DrugsPackageType", "DrugsPackageType")
                        .WithMany()
                        .HasForeignKey("DrugsPackageTypeId");

                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany("DrugUHIAlist")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.UnitsTypes.UnitsType", "MainUnit")
                        .WithMany()
                        .HasForeignKey("MainUnitId");

                    b.HasOne("EHealth.ManageItemLists.Domain.RegistrationTypes.RegistrationType", "RegistrationType")
                        .WithMany()
                        .HasForeignKey("RegistrationTypeId");

                    b.HasOne("EHealth.ManageItemLists.Domain.ReimbursementCategories.ReimbursementCategory", "ReimbursementCategory")
                        .WithMany()
                        .HasForeignKey("ReimbursementCategoryId");

                    b.HasOne("EHealth.ManageItemLists.Domain.UnitsTypes.UnitsType", "SubUnit")
                        .WithMany()
                        .HasForeignKey("SubUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DrugsPackageType");

                    b.Navigation("ItemList");

                    b.Navigation("MainUnit");

                    b.Navigation("RegistrationType");

                    b.Navigation("ReimbursementCategory");

                    b.Navigation("SubUnit");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DrugsPricing.DrugPrice", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Drugs.DrugsUHIA.DrugUHIA", null)
                        .WithMany("DrugPrices")
                        .HasForeignKey("DrugUHIAId");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Facility.UHIA.FacilityUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany("FacilityUHIAlist")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ItemList");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListPricing.ItemListPrice", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ConsumablesAndDevices.ConsumablesAndDevicesUHIA", "ConsumablesAndDevicesUHIA")
                        .WithMany("ItemListPrices")
                        .HasForeignKey("ConsumablesAndDevicesUHIAId");

                    b.HasOne("EHealth.ManageItemLists.Domain.DevicesAndAssets.UHIA.DevicesAndAssetsUHIA", "DevicesAndAssetsUHIA")
                        .WithMany("ItemListPrices")
                        .HasForeignKey("DevicesAndAssetsUHIAId");

                    b.HasOne("EHealth.ManageItemLists.Domain.Procedures.ProceduresICHI.ProcedureICHI", "ProcedureICHI")
                        .WithMany("ItemListPrices")
                        .HasForeignKey("ProcedureICHIId");

                    b.HasOne("EHealth.ManageItemLists.Domain.Services.ServicesUHIA.ServiceUHIA", "ServiceUHIA")
                        .WithMany("ItemListPrices")
                        .HasForeignKey("ServiceUHIAId");

                    b.Navigation("ConsumablesAndDevicesUHIA");

                    b.Navigation("DevicesAndAssetsUHIA");

                    b.Navigation("ProcedureICHI");

                    b.Navigation("ServiceUHIA");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemListTypes.ItemListType", "ItemListType")
                        .WithMany("ItemListSubtypes")
                        .HasForeignKey("ItemListTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemListType");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemLists.ItemList", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", "ItemListSubtype")
                        .WithMany("ItemLists")
                        .HasForeignKey("ItemListSubtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemListSubtype");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Procedures.ProceduresICHI.ProcedureICHI", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany("ProcedureICHIlist")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.LocalSpecialtyDepartments.LocalSpecialtyDepartment", "LocalSpecialtyDepartment")
                        .WithMany()
                        .HasForeignKey("LocalSpecialtyDepartmentId");

                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemList");

                    b.Navigation("LocalSpecialtyDepartment");

                    b.Navigation("ServiceCategory");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Resource.ItemPrice.ResourceItemPrice", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.PriceUnits.PriceUnit", "PriceUnit")
                        .WithMany()
                        .HasForeignKey("PriceUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Resource.UHIA.ResourceUHIA", "ResourceUHIA")
                        .WithMany("ItemListPrices")
                        .HasForeignKey("ResourceUHIAId");

                    b.Navigation("PriceUnit");

                    b.Navigation("ResourceUHIA");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Resource.UHIA.ResourceUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany("ResourceUHIAlist")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ItemList");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Services.ServicesUHIA.ServiceUHIA", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.ItemLists.ItemList", "ItemList")
                        .WithMany("serviceUHIAlist")
                        .HasForeignKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", "ServiceSubCategory")
                        .WithMany()
                        .HasForeignKey("ServiceSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemList");

                    b.Navigation("ServiceCategory");

                    b.Navigation("ServiceSubCategory");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Sub_Categories.SubCategory", b =>
                {
                    b.HasOne("EHealth.ManageItemLists.Domain.Categories.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", "ItemListSubtype")
                        .WithMany()
                        .HasForeignKey("ItemListSubtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ItemListSubtype");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Categories.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ConsumablesAndDevices.ConsumablesAndDevicesUHIA", b =>
                {
                    b.Navigation("ItemListPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DevicesAndAssets.UHIA.DevicesAndAssetsUHIA", b =>
                {
                    b.Navigation("ItemListPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.DoctorFees.UHIA.DoctorFeesUHIA", b =>
                {
                    b.Navigation("ItemListPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Drugs.DrugsUHIA.DrugUHIA", b =>
                {
                    b.Navigation("DrugPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListSubtypes.ItemListSubtype", b =>
                {
                    b.Navigation("ItemLists");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemListTypes.ItemListType", b =>
                {
                    b.Navigation("ItemListSubtypes");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.ItemLists.ItemList", b =>
                {
                    b.Navigation("ConsumablesAndDevicesUHIAlist");

                    b.Navigation("DevicesAndAssetsUHIAlist");

                    b.Navigation("DoctorFeesUHIAlist");

                    b.Navigation("DrugUHIAlist");

                    b.Navigation("FacilityUHIAlist");

                    b.Navigation("ProcedureICHIlist");

                    b.Navigation("ResourceUHIAlist");

                    b.Navigation("serviceUHIAlist");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Procedures.ProceduresICHI.ProcedureICHI", b =>
                {
                    b.Navigation("ItemListPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Resource.UHIA.ResourceUHIA", b =>
                {
                    b.Navigation("ItemListPrices");
                });

            modelBuilder.Entity("EHealth.ManageItemLists.Domain.Services.ServicesUHIA.ServiceUHIA", b =>
                {
                    b.Navigation("ItemListPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
